<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_bullet_needle</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>class_projectile</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Homing Setup + myHomingTargetClass
event_inherited();

speed = 4;
maxSpeed = 12;
decay = -0.02;

myHomingTargetClass = class_player;
weapon_homing_setup(3,0.008,0.1,180,5,100,1200);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Homing Update
event_inherited();
if (instance_exists(myGun)) myHomingTargetClass = myGun.myHomingTargetClass;
weapon_homing_update(myHomingTargetClass,true);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="faction_ducan">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if faction == f_enemy &amp;&amp; instance_exists(other)
{
    spreadX = irandom_range(-15,15);
    spreadY = irandom_range(-15,15);
        
    if (!other.dodging) &amp;&amp; (ds_list_find_index(damage_list,other.id) &lt; 0) &amp;&amp; (other.isVulnerable)
    {
        ds_list_add(damage_list,other.id);
        
        other.aggro += other.aggro_add_hit;
        
        if (other.shield) other.energy -= damage;
        else 
        {
            other.hp -= damage;
            bloodAmount = min(round(damage/5), (global.max_casings-global.count_casings), 5);
            if (bloodAmount) repeat(bloodAmount) blood = instance_create(x,y,fx_blood);
        }
        if (other.hp &lt;= 0) other.no_score = true;
        other.hit_taken = true;
        
        other.pushed = true;
        other.push_direction = direction;
        other.push_speed += push_power;
        
        damage_fx = instance_create(other.x+spreadX,other.y+spreadY,fx_damage);
        damage_fx.damage = damage;
        
        audio_play(audio_emitter,false,1,sfx_impact_flesh1,sfx_impact_flesh2,sfx_impact_flesh3,sfx_impact_flesh4);
        
        ds_list_add(global.audio_cleaner,audio_emitter);
        if (!instance_exists(hit)) &amp;&amp; (global.count_particles &lt; global.max_particles)
        {
            hit = instance_create(x,y,fx_hit);
            hit.type = ammo_type;
        }
        instance_destroy();
    }
    
    if (other.dodging) &amp;&amp; (ds_list_find_index(damage_list,other.id) &lt; 0)
    {
        ds_list_add(damage_list,other.id);
        damageEffect = instance_create(other.x+spreadX,other.y+spreadY,fx_damage);
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="faction_player">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (faction == f_enemy) &amp;&amp; (instance_exists(other))
{
    spreadX = irandom_range(-15,15);
    spreadY = irandom_range(-15,15);
    
    if (!other.dodging) &amp;&amp; (other.isVulnerable)
    {
        if (other.shield)
        {
            if (other.superShield) damage = 0;
            if (distance_travelled &gt; range) damage = round(damage/3);
            if (global.challengeSupressor) damage = damage*2;
            other.energy -= damage;
            
            audio_play_exclusive(other.audio_emitter,false,1,sfx_shield_hit1,sfx_shield_hit2);
            if (other.energy &lt;= 0) audio_play_exclusive(other.audio_emitter,false,1,sfx_shield_destroy);
        }
        else
        {
            if (distance_travelled &gt; range) damage = round(damage/3);
            other.hp -= damage;
            audio_play(other.audio_emitter,false,1,sfx_impact_flesh1,sfx_impact_flesh2,sfx_impact_flesh3,sfx_impact_flesh4);
            
            bloodAmount = min(round(damage/5), (global.max_casings-global.count_casings), 5);
            if (bloodAmount) repeat(bloodAmount) blood = instance_create(x,y,fx_blood);
        }
        other.hit_taken = true;
        
        
        damage_fx = instance_create(other.x+spreadX,other.y+spreadY,fx_damage);
        damage_fx.damage = damage;

        ds_list_add(global.audio_cleaner,audio_emitter);
        if (!instance_exists(hit)) &amp;&amp; (global.count_particles &lt; global.max_particles)
        {
            hit = instance_create(x,y,fx_hit);
            hit.type = ammo_type;
        }
        instance_destroy();
    }
    
    if (other.dodging) &amp;&amp; (ds_list_find_index(damage_list,other.id) &lt; 0)
    {
        ds_list_add(damage_list,other.id);
        damageEffect = instance_create(other.x+spreadX,other.y+spreadY,fx_damage);
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>18,17</point>
    <point>18,18</point>
  </PhysicsShapePoints>
</object>
