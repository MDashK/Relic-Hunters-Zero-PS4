<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>class_interactive_master</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();

range = 130;
in_range = false;
sprite_index = spr_pickup_light;
ammo = 50;

myPrompt = instance_create(x+10,y-25,fx_prompt_e);
myPrompt.owner = id;

name = "I AM ERROR";
myInfo = instance_create(x,y,fx_info_pickup);
myInfo.owner = id;

depth=-y-2;

reflection_object_setup(25,-1,image_index);

on_top_of_object = false;

image_speed = 0;
image_index = 0;

kill = false;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Pick Up

if instance_exists(activationClient) &amp;&amp; (isInteractiveObjectActive)
{
    player = activationClient;
    p = player.myPlayerId;
    
    if (point_distance(x,y,player.x,player.y) &lt;= range) in_range = true;
    
    if (wantToActivate) &amp;&amp; (in_range)
    {
        var want_to_die = false;
        var isAmmoFull = false;
        
        if (sprite_index == spr_pickup_light) if (global.ammo_light[p] &lt; global.ammo_light_max) { global.ammo_light[p] += ammo; want_to_die = true;} else isAmmoFull = true;
        if (sprite_index == spr_pickup_medium) if (global.ammo_medium[p] &lt; global.ammo_medium_max) { global.ammo_medium[p] += ammo; want_to_die = true;} else isAmmoFull = true;
        if (sprite_index == spr_pickup_heavy) if (global.ammo_heavy[p] &lt; global.ammo_heavy_max) { global.ammo_heavy[p] += ammo; want_to_die = true;} else isAmmoFull = true;
        
        if (sprite_index == spr_pickup_grenade) 
        {
                if (global.grenades[p] &lt; global.grenades_max) { global.grenades[p] += ammo; want_to_die = true;} else isAmmoFull = true;
        }
        
        if (want_to_die)
        {
            guiInfo = instance_create(player.x,player.y,gui_info);
            if (sprite_index == spr_pickup_light) { guiInfo.myString = '+ '+ loc_key("GENERAL_LIGHTAMMO"); guiInfo.colorMain = K_BETU_GREEN; }
            if (sprite_index == spr_pickup_medium)  { guiInfo.myString = '+ '+ loc_key("GENERAL_MEDIUMAMMO"); guiInfo.colorMain = K_BETU_RED; }
            if (sprite_index == spr_pickup_heavy) { guiInfo.myString = '+ '+ loc_key("GENERAL_HEAVYAMMO"); guiInfo.colorMain = K_BETU_BLUE; } 
            if (sprite_index == spr_pickup_grenade)  { guiInfo.myString = '+ '+ loc_key("GENERAL_GRENADES"); guiInfo.colorMain = K_BETU_ORANGE; }
            //teste
            guiInfo.colorMain = c_white;
            //
            guiInfo.owner = player;
            
            audio_play(player.audio_emitter,false,1,sfx_pickup_weapon);
            isInteractiveObjectActive = false;
        }
        
        if (isAmmoFull)
        {
            guiInfo = instance_create(player.x,player.y,gui_info);
            guiInfo.myString = loc_key("INFO_FULLAMMO");
            guiInfo.colorMain = c_white;
            guiInfo.owner = player;
            audio_play(player.audio_emitter, false, 1, sfx_pickup_full);
        }
        
        if (instance_exists(global.dynamicAmmo1)) &amp;&amp; (sprite_index != spr_pickup_grenade)
        {
            if (p == 1) { global.dynamicAmmo1.timedActive = true; global.dynamicAmmo1.activeTimeCurrent = 0; }
            if (p == 2) { global.dynamicAmmo2.timedActive = true; global.dynamicAmmo2.activeTimeCurrent = 0; }
        }
    }
}


//Betu Goze
if (!on_top_of_object)
{
    myObject = collision_point(x,y,obj_wall,false,true);
    if (instance_exists(myObject)) on_top_of_object = true;
}

if (on_top_of_object)
{
    if (!instance_exists(myObject))
    {
        y+=32;
        on_top_of_object = false;
    }
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Animation

if (isInteractiveObjectActive)
{
    if (in_range) image_index = 1;
    else image_index = 0;
}
else
{
    if instance_exists(myPrompt)
    {
        with (myPrompt)
        {
            instance_destroy();
        }
    }
    
    image_speed = 0.3;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="7">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (!isInteractiveObjectActive)
{
    image_index = image_number-1;
    image_speed = 0;
    kill = true;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_self();

if (kill) &amp;&amp; (!on_top_of_object)
{
    draw_persistent(sprite_index,image_index,x,y,image_xscale,image_yscale,image_angle,image_blend,image_alpha);
    instance_destroy();
}   
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
