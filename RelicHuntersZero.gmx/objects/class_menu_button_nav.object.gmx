<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>class_menu_button</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Main Stuff

event_inherited();

textXOffset = 0;
textYOffset = -14;

myFont = global.font_menuLarge;

starPositionX = 0;
starPositionY = -1*(point_distance(x,y,x,bbox_top));

starScaleInitial = 1.5;
starScale = starScaleInitial;
starScaleSpeed = 0.025;
starScaleFinal = 1;

moveSpeed = 3;
moveDistance = 15;

startPositionX = x;
startPositionY = y;

selectPositionX = x;
selectPositionY = y-moveDistance;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Dynamic Movement

event_inherited();

if (isSelected)
{
    if (x &lt; selectPositionX) x += min( moveSpeed, abs(selectPositionX-x) );
    if (x &gt; selectPositionX) x -= min( moveSpeed, abs(selectPositionX-x) );
    if (y &lt; selectPositionY) y += min( moveSpeed, abs(selectPositionY-y) );
    if (y &gt; selectPositionY) y -= min( moveSpeed, abs(selectPositionY-y) );
    
    if (starScale &gt; starScaleFinal) starScale -= min( starScaleSpeed, abs(starScale-starScaleFinal) );
}
else
{
    if (x &lt; startPositionX) x += min( moveSpeed, abs(startPositionX-x) );
    if (x &gt; startPositionX) x -= min( moveSpeed, abs(startPositionX-x) );
    if (y &lt; startPositionY) y += min( moveSpeed, abs(startPositionY-y) );
    if (y &gt; startPositionY) y -= min( moveSpeed, abs(startPositionY-y) );
    
    starScale = starScaleInitial;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Draw Event

image_speed = 0;

if (!isAvailable) draw_set_alpha(0.5);
if (isSelected) image_index = 0;
else image_index = 1;

draw_self();

draw_set_font(myFont);
draw_set_halign(fa_center);
draw_set_valign(fa_top);

draw_set_colour(make_colour_rgb(239,4,68));

if (labelString != '') draw_text(x+textXOffset,y+textYOffset,labelString);

draw_set_alpha(1);

if (isSelected) draw_sprite_ext(spr_menu_star,0,x+starPositionX,y+starPositionY,starScale,starScale,0,c_white,1);




</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
