<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Setup

spawnedItem = noone;
hasSpawned = false;

//I set these at the children:
//tier = global.endTierSlot1;
//myItem = global.endTierItem1;

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Spawn Control

if (!instance_exists(spawnedItem)) {
    if (instance_exists(data_shopEndless)){
        var data = data_shopEndless;
        var list = -1;
        var spawn = -1;
        
        tier = min(tier,3);
        if (hasSpawned) myItem = noone;
        
        if (myItem) spawn = myItem;
        else if (ds_exists(global.endShop_tier[tier],ds_type_list)) {
            list = global.endShop_tier[tier];
            if (ds_list_empty(list)) {
                with (data_shopEndless){
                    event_perform(ev_create,0);
                }
                list = global.endShop_tier[tier];
                if (ds_list_empty(list)) instance_destroy();
            }
            var randomSpawn = irandom(ds_list_size(list)-1);
            spawn = ds_list_find_value(list,randomSpawn);
            tier++;
        }
            
            
        if (spawn){
            spawnedItem = instance_create(x,y,spawn);
            if (ds_exists(list,ds_type_list)) ds_list_delete(list,randomSpawn);
            hasSpawned = true;
            myItem = spawn;
        }
    }
}

//Clean the Table
var isWeaponOnTheTable = collision_circle(x,y,60,class_pickup_weapon,false,true);
if (isWeaponOnTheTable){
    if (instance_exists(isWeaponOnTheTable)){
        isWeaponOnTheTable.y += 212;
        if (instance_exists(isWeaponOnTheTable.myPrompt)) isWeaponOnTheTable.myPrompt.y+=212;
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
