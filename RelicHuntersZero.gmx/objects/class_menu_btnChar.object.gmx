<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>class_menu_button</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Main Stuff

event_inherited();
myCharacter = char_jimmy;
labelString = 'MISSING_LABEL';
myFont = global.font_menuMedium;
myInput = -1;

spriteOn = spr_char_jimmyOn;
spriteOff = spr_char_jimmyOff;
spriteSel = spr_char_jimmySel;
spriteFinal = spr_char_jimmyFinal;

image_speed = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Selection &amp; Action

event_inherited();

//Run Action
if (executeAction)
{
    if (global.selectedButton[K_INPUT_KEYBOARD] == id) myInput=K_INPUT_KEYBOARD;
    if (global.selectedButton[K_INPUT_JOYSTICK1] == id) myInput=K_INPUT_JOYSTICK1;
    if (global.selectedButton[K_INPUT_JOYSTICK2] == id) myInput=K_INPUT_JOYSTICK2;
    

    if (instance_exists(menu_char_card1))
    {
        if (menu_char_card1.slotInput == -1) &amp;&amp; (menu_char_card1.slotCharacter == -1) &amp;&amp; (!global.selectionLocked[myInput])
        {
            menu_char_card1.slotInput = myInput;
            menu_char_card1.slotCharacter = myCharacter;
            global.selectionLocked[myInput] = true;
        }
    }
        
    if (instance_exists(menu_char_card2))
    {
        if (menu_char_card2.slotInput == -1) &amp;&amp; (menu_char_card2.slotCharacter == -1) &amp;&amp; (!global.selectionLocked[myInput])
        {
            menu_char_card2.slotInput = myInput;
            menu_char_card2.slotCharacter = myCharacter;
            global.selectionLocked[myInput] = true;
        }
    }
    
    executeAction = false;
}


//Animation (should have been a state machine but I'm too lazy)
var isLocked = false;
if (myInput != -1) if (global.selectionLocked[myInput]) isLocked = true;

if (isLocked)
{
    if (sprite_index != spriteFinal)
    {
        sprite_index = spriteFinal;
        image_index = 0; 
        image_speed = 0.2;
    }
}
else if (isSelected)
{
    if (sprite_index != spriteSel) 
    { 
        sprite_index = spriteSel;
        image_index = 0;
        image_speed = 0.2;
    }
}
else sprite_index = spriteOn;

if (!isAvailable) sprite_index = spriteOff;

//Reset myInput
if (!isSelected) myInput = -1;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="7">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Clamp animation
image_index = image_number-1;
image_speed = 0;

if (sprite_index == spriteSel) image_index = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Override Draw Event

//if (!isAvailable) //draw_set_alpha(0.5);

draw_self();

draw_set_font(myFont);
draw_set_halign(fa_right);
draw_set_valign(fa_bottom);

if (!isSelected) draw_set_colour(c_white);
else draw_set_colour(c_white);

if (labelString != '') draw_text(x+230,y+66,labelString);

draw_set_alpha(1);

//if (isSelected) draw_sprite_ext(spr_menu_star,0,x+starPositionX,y+starPositionY,starScale,starScale,0,c_white,1);

//For now they are staying on top of each other, live with it
var inputIconX = x+65;
var inputIconY = y+56;

if (global.selectedButton[K_INPUT_KEYBOARD] == id) draw_sprite_ext(spr_char_inputKey,0,inputIconX,inputIconY,starScale,starScale,0,c_white,1);
if (global.selectedButton[K_INPUT_JOYSTICK1] == id) draw_sprite_ext(spr_char_inputJoy1,1,inputIconX,inputIconY,starScale,starScale,0,c_white,1);
if (global.selectedButton[K_INPUT_JOYSTICK2] == id) draw_sprite_ext(spr_char_inputJoy2,2,inputIconX,inputIconY,starScale,starScale,0,c_white,1);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
