<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_weaponInfo</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Init
myWeapon = noone;
myName = "UNNAMED WEAPON";
mySprite = -1;

myDamage = 999;
myRange = 999;
myCapacity = 999;
myAmmoType = 999;
myAmmoCost = 999;
myImpact = 999;
myRate = 999;
myReload = 999;
myBurst = 999;
myPiercing = 999;

drawBackground = false;

myFontName = global.font_numberMedium;
myFontText = global.font_numberMedium;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Update Attributes
if (myWeapon) &amp;&amp; instance_exists(myWeapon)
{
    myName = myWeapon.name;
    mySprite = myWeapon.sprite_index;
    myDamage = myWeapon.projectile_damage;
    myRange = myWeapon.projectile_range;
    myCapacity = myWeapon.ammo;
    myAmmoType = myWeapon.ammo_type;
    myAmmoCost = myWeapon.ammo_cost;
    myImpact = myWeapon.projectile_power;
    myRate = myWeapon.fire_rate;
    myReload = (myWeapon.reload_time/room_speed);
    myBurst = myWeapon.fire_burst;
    myPiercing = myWeapon.projectile_piercing;
}


</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="5">
      <action>
        <libid>1</libid>
        <id>203</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>1</exetype>
        <functionname>action_kill_object</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Draw

if (drawBackground) draw_self();

if (myWeapon != noone)
{
    if (sprite_exists(mySprite)) draw_sprite_ext(mySprite,1,x+53,y+27,1.5,1.5,0,c_white,1);
    
    draw_set_font(myFontName);
    draw_set_valign(fa_center);
    draw_set_halign(fa_left);
    
    draw_text_dropshadow_ext_transformed(x+142,y+24,myName,c_white,c_black,0.7,1,1,1,0,1);
    
    var firstGroupX = x+17;
    var firstGroupY = y+68;
    var secondGroupX = x+276;
    var secondGroupY = y+68;
    
    var lineSpacing = 28;
    var columnSpacing1 = 170;
    var columnSpacing2 = 150;
    
    draw_set_font(myFontText);
    
    //First Group
    draw_set_valign(fa_center);
    draw_set_halign(fa_left);
    
    draw_text_dropshadow_ext_transformed(firstGroupX,firstGroupY,loc_key("WEAPON_DAMAGE"),c_white,c_black,0.7,1,1,1,0,1);
    draw_text_dropshadow_ext_transformed(firstGroupX,firstGroupY+lineSpacing,loc_key("WEAPON_RANGE"),c_white,c_black,0.7,1,1,1,0,1);
    draw_text_dropshadow_ext_transformed(firstGroupX,firstGroupY+lineSpacing*2,loc_key("WEAPON_CAPACITY"),c_white,c_black,0.7,1,1,1,0,1);
    draw_text_dropshadow_ext_transformed(firstGroupX,firstGroupY+lineSpacing*3,loc_key("WEAPON_AMMOTYPE"),c_white,c_black,0.7,1,1,1,0,1);
    draw_text_dropshadow_ext_transformed(firstGroupX,firstGroupY+lineSpacing*4,loc_key("WEAPON_AMMOCOST"),c_white,c_black,0.7,1,1,1,0,1);
    
    draw_set_valign(fa_center);
    draw_set_halign(fa_center);
    
    draw_text_dropshadow_ext_transformed(firstGroupX+columnSpacing1,firstGroupY,myDamage,c_white,c_black,0.7,1,1,1,0,1);
    draw_text_dropshadow_ext_transformed(firstGroupX+columnSpacing1,firstGroupY+lineSpacing,myRange,c_white,c_black,0.7,1,1,1,0,1);
    draw_text_dropshadow_ext_transformed(firstGroupX+columnSpacing1,firstGroupY+lineSpacing*2,myCapacity,c_white,c_black,0.7,1,1,1,0,1);
    draw_text_dropshadow_ext_transformed(firstGroupX+columnSpacing1,firstGroupY+lineSpacing*3,myAmmoType,c_white,c_black,0.7,1,1,1,0,1);
    draw_text_dropshadow_ext_transformed(firstGroupX+columnSpacing1,firstGroupY+lineSpacing*4,myAmmoCost,c_white,c_black,0.7,1,1,1,0,1);
    
    //Second Group
    
    draw_set_valign(fa_center);
    draw_set_halign(fa_left);
    
    draw_text_dropshadow_ext_transformed(secondGroupX,secondGroupY,loc_key("WEAPON_IMPACT"),c_white,c_black,0.7,1,1,1,0,1);
    draw_text_dropshadow_ext_transformed(secondGroupX,secondGroupY+lineSpacing,loc_key("WEAPON_RATE"),c_white,c_black,0.7,1,1,1,0,1);
    draw_text_dropshadow_ext_transformed(secondGroupX,secondGroupY+lineSpacing*2,loc_key("WEAPON_RELOAD"),c_white,c_black,0.7,1,1,1,0,1);
    draw_text_dropshadow_ext_transformed(secondGroupX,secondGroupY+lineSpacing*3,loc_key("WEAPON_BURST"),c_white,c_black,0.7,1,1,1,0,1);
    draw_text_dropshadow_ext_transformed(secondGroupX,secondGroupY+lineSpacing*4,loc_key("WEAPON_PIERCING"),c_white,c_black,0.7,1,1,1,0,1);
    
    draw_set_valign(fa_center);
    draw_set_halign(fa_center);
    
    draw_text_dropshadow_ext_transformed(secondGroupX+columnSpacing2,secondGroupY,myImpact,c_white,c_black,0.7,1,1,1,0,1);
    draw_text_dropshadow_ext_transformed(secondGroupX+columnSpacing2,secondGroupY+lineSpacing,myRate,c_white,c_black,0.7,1,1,1,0,1);
    draw_text_dropshadow_ext_transformed(secondGroupX+columnSpacing2,secondGroupY+lineSpacing*2,myReload,c_white,c_black,0.7,1,1,1,0,1);
    draw_text_dropshadow_ext_transformed(secondGroupX+columnSpacing2,secondGroupY+lineSpacing*3,myBurst,c_white,c_black,0.7,1,1,1,0,1);
    draw_text_dropshadow_ext_transformed(secondGroupX+columnSpacing2,secondGroupY+lineSpacing*4,myPiercing,c_white,c_black,0.7,1,1,1,0,1);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
