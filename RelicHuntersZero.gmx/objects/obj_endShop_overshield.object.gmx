<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_pickup_shield</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>class_endShop_resource</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Setup
event_inherited();

overshield = 50;

priceTier = global.endPriceTier_overshield;
priceArray = global.endPrice_overshield;

name = loc_key("INFO_SHIELDPLUS");
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Check canActivate, inherit and unlock

canActivate = true;
infoString = "";

if instance_exists(activationClient) &amp;&amp; (isInteractiveObjectActive)
{
    if (global.character[activationClient.myPlayerId] != char_biu) //Biu can't pick up Overshield
    {
        if (activationClient.overshield &gt;= activationClient.energy_max)
        {
            canActivate = false;
            infoString = loc_key("INFO_SHIELDMAX");
        }
    }
    else{
        canActivate = false;
        infoString = loc_key("INFO_CANTUSESHIELD");
    }
}

event_inherited();

if (unlock)
{
    if (instance_exists(activationClient))
    {
        activationClient.overshield += min(overshield, (activationClient.energy_max - activationClient.overshield));
        activationClient.energy_regen_time_current = activationClient.energy_regen_time-1;
        audio_play(activationClient.audio_emitter,false,1,sfx_pickup_health);
    }
    
    guiInfo = instance_create(activationClient.x,activationClient.y,gui_info);
    guiInfo.colorMain = K_BETU_BLUE;
    guiInfo.myString = loc_key("INFO_SHIELDPLUS");
    guiInfo.owner = activationClient;
    
    unlock = false;
    wantToActivate = false;
}




</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Sync price tier
global.endPriceTier_overshield = priceTier;
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
