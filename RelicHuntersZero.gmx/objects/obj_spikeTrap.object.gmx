<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_spikeTrap</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>9999999</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Main

canActivate = true;

activated = false;
allTheWayUp = false;
goingDown = false;

damage = 25;
damageRadius = 64;
push_power = 0;

image_speed = 0;

damageList = ds_list_create();

damageTime = room_speed*1;
damageTimeCurrent = 0;

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Animation &amp; Damage

if (activated) {
    //Damage
    is_enemy = true;
    poor_guy = collision_circle(x,y,damageRadius,faction_player,false,true);
    
    if (!poor_guy) || (ds_list_find_index(damageList,poor_guy)) 
    {
        poor_guy = collision_circle(x,y,damageRadius,class_enemy,false,true);
    }
    else is_enemy = false;
    
    if (poor_guy)
    {
        if (ds_list_find_index(damageList,poor_guy) &lt; 0) &amp;&amp; (poor_guy.isVulnerable) &amp;&amp; (!poor_guy.dodging)
        {
            ds_list_add(damageList,poor_guy);
            
            if (poor_guy.shield)
            {
                if (!is_enemy){
                    if (poor_guy.superShield) damage = 0;
                }
                
                if damage &gt; poor_guy.energy
                {
                    damage -= poor_guy.energy;
                    poor_guy.energy = 0;
                    if (is_enemy) poor_guy.hp -= damage;
                    else{
                        damage = floor(damage*0.4);
                        if (damage) poor_guy.hp -= damage;
                    }
                    repeat(10) 
                    {
                        blood = instance_create(poor_guy.x,poor_guy.y,fx_blood);
                        blood.vertical_speed_start = random_range(5,10);
                        blood.speed = random_range(5,9);
                    }
                }
                else poor_guy.energy -= damage;
            }
            else 
            {
                poor_guy.hp -= damage;
                repeat(10) 
                {
                    blood = instance_create(poor_guy.x,poor_guy.y,fx_blood);
                    blood.vertical_speed_start = random_range(5,10);
                    blood.speed = random_range(5,9);
                }
            }
            
            if (poor_guy.hp &lt;= 0) want_to_pause = true;
            poor_guy.hit_taken = true;
            
            if (is_enemy)
            {
                poor_guy.pushed = true;
                poor_guy.push_direction = point_direction(x,y,poor_guy.x,poor_guy.y);
                poor_guy.push_speed = push_power;
            }
        }
    }
    
    //Animation
    if (allTheWayUp) {
        damageTimeCurrent++;
        
        if (damageTimeCurrent &gt;= damageTime) {
            allTheWayUp = false;
            goingDown = true;
            image_speed = -0.2;
        }
    }
}

//Reset
if (goingDown) &amp;&amp; (image_index &lt;= 0.2){
    activated = false;
    allTheWayUp = false;
    goingDown = false;
    damageTimeCurrent = 0;
    ds_list_clear(damageList);
    image_speed = 0;
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Shut Down on Level End

if (instance_exists(controller_main)) &amp;&amp; (canActivate) {
    if (controller_main.level_end) canActivate = false;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="faction_player">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Activation

if (!activated) &amp;&amp; (canActivate)
{
    activated = true;
    image_index = 0;
    image_speed = 0.2;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="7">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Stop and Retract

if (activated){
    image_index = image_number-1;
    image_speed = 0;
    allTheWayUp = true;
    
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="5">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Clean Up
ds_list_destroy(damageList);
instance_destroy();
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
