<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_gunnar_idle</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>class_interactive_master</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Setup
event_inherited();

image_speed = 0.2;
image_xscale = -1;
depth = -y;

price = 6000;
allowBuy = false;
unlock = false;

range = 120;
in_range = false;

myPrompt = instance_create(x-42,y+30,fx_prompt_e);
myPrompt.owner = id;

name = loc_key("GUNNAR_INFO_ENDLESS_UNLOCK");
myInfo = instance_create(x,y,fx_info_pickup);
myInfo.owner = id;

myBalloon = noone;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Price + Buy
event_inherited();

if (!global.unlockEndless){
    if (global.relic_morning_star) ||
    (global.relic_pineapple_pie) ||
    (global.relic_rabbit_foot) ||
    (global.relic_midnight_meal) ||
    (global.relic_yottabyte_processor) ||
    (global.relic_alcoholic_carrot) ||
    (global.relic_yottabyte_drive) ||
    (global.relic_pineapple_pudding) ||
    (global.relic_infinity_battery) ||
    (global.relic_crystal_bacon) ||
    (global.relic_midnight_beer) ||
    (global.relic_watchful_eye) ||
    (global.relic_dev_potion) {
        allowBuy = true;
    }
}
else {
    unlock = true;
    allowBuy = false;
}

if instance_exists(activationClient) &amp;&amp; (allowBuy)
{
    if (point_distance(x,y,activationClient.x,activationClient.y) &lt;= range) &amp;&amp; (price) in_range = true;    
  
    if (wantToActivate) &amp;&amp; (in_range)
    {
        if (global.score_total &gt;= price)
        {
            global.score_total -= price;
            global.unlockEndless = true;
            wantToActivate = false;
                    
            announce = instance_create(x,y,fx_bigMessage);
            announce.textBig = loc_key("HUD_UNLOCK_ENDLESS");
            announce.textSmall = loc_key("HUD_UNLOCK_ENDLESS_DESC");
                    
            audio_play(activationClient.audio_emitter,false,1,sfx_buy);
                        
            unlock = true;
            myBalloon.upgradeTalk = true;
        }
        else{
            guiInfo = instance_create(activationClient.x,activationClient.y,gui_info);
            guiInfo.myString = loc_key("INFO_NOTENOUGHBOUNTY");;
            guiInfo.colorMain = K_BETU_RED;
            guiInfo.owner = activationClient;
            audio_play(activationClient.audio_emitter, false, 1, sfx_pickup_full); 
        }    
    }
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Talk when player is nearby

if instance_exists(class_player)
{
    var distToPlayer = point_distance(x,y-8,class_player.x,class_player.y);
    
    if (distToPlayer &lt;= 280) &amp;&amp; (!instance_exists(obj_endless_balloon))
    {
            myBalloon = instance_create(x,y,obj_endless_balloon);
            if (!image_xscale) myBalloon.x -= 50;
            myBalloon.owner = id;
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Draw

draw_self();

draw_sprite(spr_priceTag,0,x,y+8);

if (in_range) &amp;&amp; (allowBuy) {
    draw_set_font(global.font_shopPrice);
    draw_set_halign(fa_left);
    draw_set_valign(fa_center);
    
    var myColor = c_white;
    if (global.score_total &lt; price) myColor = K_BETU_RED;
    
    draw_text_outline(x-4,y+20,string(price),myColor);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
