<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-100</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Main Setup

longDist = 500;
shortDist = 160;

drawStart = 42;
radius = drawStart;

longRadius = 320;
shortRadius = 160;
noRadius = 80;
drawLong = false;
drawShort = false;



alarm[0] = room_speed*0.2;

if instance_exists(obj_digSpot)
{
    var dist = point_distance(x,y,obj_digSpot.x,obj_digSpot.y);
    
    if (dist &lt;= shortDist) drawShort = true;
    else if (dist &lt;= longDist) drawLong = true;
}

longGrowthSpeed = 8;
shortGrowthSpeed = 3;
noRadiusSpeed = 2;

allowChild = true;

if (drawShort) audio_play_sound(sfx_detector_close,99,false);
else if (drawLong) audio_play_sound(sfx_detector_mid,99,false);
else audio_play_sound(sfx_detector_far,99,false);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Create child if possible, create arrow
if (allowChild)
{
    var child = instance_create(x,y,fx_detector);
    if (!instance_exists(fx_detectorArrow)) var arrow = instance_create(x,y,fx_detectorArrow);
    
    child.allowChild = false;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="5">
      <action>
        <libid>1</libid>
        <id>203</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>1</exetype>
        <functionname>action_kill_object</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Draw Rectangle

var targetRadius = 0;
var growthSpeed = 0;



if (drawShort)
{
    targetRadius = shortRadius;
    growthSpeed = shortGrowthSpeed;
    draw_set_colour(K_BETU_RED);
}
else if (drawLong)
{
    targetRadius = longRadius;
    growthSpeed = longGrowthSpeed;
    draw_set_colour(K_BETU_BLUE);
}
else
{
    targetRadius = noRadius;
    growthSpeed = noRadiusSpeed;
    draw_set_colour(c_white);
}


if (radius &lt; targetRadius) radius += growthSpeed;
else instance_destroy();

if (targetRadius) draw_rectangle(x-radius,y-radius,x+radius,y+radius,true);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
