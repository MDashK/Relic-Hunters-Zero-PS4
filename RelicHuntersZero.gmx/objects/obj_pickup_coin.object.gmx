<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_casing_blob</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Bouncing Coins
magnet_range = 110;
magnet_accel = 3;
magnet_speed_max = 8;
magnet_friction = 2;

alpha = 1;
alpha_duration = room_speed*0.1;
alpha_duration_current = 0;
myTime = 0;
life_time = room_speed*(random_range(12,15));
alert_time = room_speed*8;

sprite1 = spr_coin_drop;
sprite2 = spr_coin_ground;
sprite = sprite1;
sprite_subimage = 0;
draw_height = -40;

vertical_speed_start = random_range(3,6);
interactive_speed = vertical_speed_start;
vertical_speed = -vertical_speed_start;
vertical_speed_start_min = 0.5;
fake_gravity = 0.3;

bounce_min = 1;
bounce_max = 2;

speed = random_range(2,4);
friction = 0.05;
 
randomizeDir = false;
image_speed = 0.2;

direction = random(360);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Physics

depth= -y;

if (vertical_speed_start) vertical_speed += fake_gravity;
else depth= 999999999999999;

draw_height += vertical_speed;

if draw_height &gt;= 0 &amp;&amp; (vertical_speed_start)
{
    draw_height = 0;
    vertical_speed = 0;
    vertical_speed_start -= random_range(bounce_min,bounce_max);
        
    if (vertical_speed_start &lt;= vertical_speed_start_min) vertical_speed_start = 0;
    else vertical_speed = -vertical_speed_start;
}

sprite_subimage += image_speed;
if (vertical_speed_start)
{
    sprite = sprite1;
    if (sprite_subimage &gt; 5) sprite_subimage = 0;
}
else 
{
    sprite = sprite2;
    if (sprite_subimage &gt; 14) sprite_subimage = 0;
}


</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Attraction and Pickup
if (vertical_speed_start &lt; interactive_speed) &amp;&amp; instance_exists(class_player)
{
    var player = instance_nearest(x,y,class_player);
    
    speed -= magnet_friction
    if speed &lt; 0 speed = 0;
    
    if point_distance(x,y,player.x,player.y) &lt;= magnet_range
    {
        speed += magnet_accel;
        if (speed &gt; magnet_speed_max) speed = magnet_speed_max;
        direction = point_direction(x,y,player.x,player.y);
    }   
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Life and Alpha

myTime++;

if (myTime &gt;= alert_time)
{
    alpha_duration_current++;
    if alpha_duration_current &gt;= alpha_duration
    {
        if (alpha == 1) alpha = 0.4;
        else alpha = 1;
        alpha_duration_current = 0;
    }
}

if (myTime &gt;= life_time)
{
    instance_destroy();
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="class_solid">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>direction = 180+(point_direction(x,y,other.x,other.y));
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="class_player">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Pickup
if (vertical_speed_start &lt; interactive_speed) &amp;&amp; (instance_exists(other))
{
    var myScore = 10;
    if (global.character[1] == char_ass || global.character[2] == char_ass) myScore += 12;
    if (global.relic_morning_star == 2) myScore += 12;
    if (global.character[1] == char_rider || global.character[2] == char_rider) myScore = floor(myScore*0.7);
    
    if (global.gameMode == gamemode_adventure) global.score_total += myScore;
    else if (global.gameMode == gamemode_endless) 
    {
        global.bountyEndless += myScore;
        global.scoreEndless += myScore;
    }
    global.statTotalBounty += myScore;
    gui = instance_create(0,0,gui_score);
    gui.value += myScore;
    gui.coin = true;
    
    if (instance_exists(global.dynamicBounty)) global.dynamicBounty.timedActive = true;
    
    if audio_emitter_exists(other.audio_emitter) audio_play(other.audio_emitter, false, 1, sfx_coin1, sfx_coin2, sfx_coin3);
    instance_destroy();
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Main Draw

draw_self();

draw_sprite_ext(sprite,sprite_subimage,x,y+draw_height,1.5,1.5,image_angle,image_blend,alpha);
reflection_add_sprite_update(sprite,sprite_subimage,x,y-draw_height,1.5,1.5,image_angle,image_blend,1);


</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>5,4</point>
    <point>6,6</point>
  </PhysicsShapePoints>
</object>
