<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>class_interactive_master</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();

range = 130;
in_range = false;
hp = 50;
active = false;

myPrompt = instance_create(x+10,y-25,fx_prompt_e);
myPrompt.owner = id;
image_speed = 0;

name = loc_key("INFO_HEALTHPLUS");
myInfo = instance_create(x,y,fx_info_pickup);
myInfo.owner = id;

depth=-y-2;

reflection_object_setup(25,-1,image_index);

on_top_of_object = false;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Pick Up

if instance_exists(activationClient)
{
    if (point_distance(x,y,activationClient.x,activationClient.y) &lt;= range) in_range = true;

    if (wantToActivate) &amp;&amp; (in_range)
    {
        if (activationClient.hp &lt; activationClient.hp_max)
        {
            activationClient.hp += hp;
            
            audio_play(activationClient.audio_emitter,false,1,sfx_pickup_health);
            
            guiInfo = instance_create(activationClient.x,activationClient.y,gui_info);
            guiInfo.colorMain = c_white;
            guiInfo.myString = loc_key("INFO_HEALTHPLUS");
            guiInfo.owner = activationClient;
            instance_destroy();
        }
        else
        {
            guiInfo = instance_create(activationClient.x,activationClient.y,gui_info);
            guiInfo.colorMain = c_black;
            guiInfo.myString = loc_key("INFO_HEALTHFULL");
            guiInfo.owner = activationClient;
            audio_play(activationClient.audio_emitter, false, 1, sfx_pickup_full);
        }
    }
}

//Betu Goze
if (!on_top_of_object)
{
    myObject = collision_point(x,y,obj_wall,false,true);
    if (instance_exists(myObject)) on_top_of_object = true;
}

if (on_top_of_object)
{
    if (!instance_exists(myObject))
    {
        y+=32;
        on_top_of_object = false;
    }
}

///Animation
if (in_range) image_index = 1;
else image_index = 0;

</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
