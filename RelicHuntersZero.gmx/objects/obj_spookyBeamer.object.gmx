<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_spooky_beamer</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>class_gun</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Main Attributes
event_inherited();

name = loc_key("WPNAME_SPOOKY_BEAMER");
gui_info_weapon_create(instance_nearest(x,y,class_player),c_white,name);

sound = 'no projectile sound';
object = obj_spookyBeamer;
projectile_obj = obj_projectile_beam;
beamColor = c_purple;
beamThickness = 4;
dropCasing = false;

goesThroughWalls = false;

shake_amount = 0.5;
projectile_speed = 64;
projectile_speed_decay = 0;
projectile_damage = 18;
projectile_range = 500;
projectile_piercing = 0;
projectile_power = 0.5;
projectile_recoil = 1;
accuracy = 1;
accuracy_aiming = 1;
ammo = 200;
ammo_cost = 0.5;
ammo_type = type_heavy;
reload_time = room_speed*2.5;
fire_rate = room_speed*0.1;

fire_amount = 1;

fire_automatic = true;
crosshair_recoil = 0.001;

joypadRumbleFactor = 0.1;

weaponClass = 'rocket';

//Mega Beam Charge
megaBeam = false;
megaBeamTime = room_speed*1.6;
megaBeamTimeCurrent = 0;
megaBeamThickness = 20;
megaBeamDamageMultiplier = 2;
oldThickness = beamThickness;
oldDamage = projectile_damage;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Mega Beam Charge

if (input_held) &amp;&amp; (!reloading) &amp;&amp; (isActive) megaBeamTimeCurrent++;
else {
    megaBeamTimeCurrent = 0;
    megaBeam = false;
    beamThickness = oldThickness;
}
        
if (!megaBeam) &amp;&amp; (megaBeamTimeCurrent &gt;= megaBeamTime)
{
        megaBeam = true;
        oldThickness = beamThickness;
        oldDamage = projectile_damage;
        beamThickness = megaBeamThickness;
        
        // &lt;-- Play mega beam sound here
}

if (megaBeam) projectile_damage = projectile_damage * megaBeamDamageMultiplier;

event_inherited(); // &lt;- Calling the Gun scripts afterwards to ensure damage will be updated before shot is fired
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Looping Sound FX

if (!reloading) &amp;&amp; (ammo_current) &amp;&amp; (owner) &amp;&amp; (instance_exists(owner)) &amp;&amp; (isActive)
{
    if (input_pressed)
    {
        audio_play(owner.audio_emitter,false,1,sfx_flamethrower_start);
    }   
    if (input_held) joy_rumble(global.input[owner.myPlayerId],0.1,0.1);
}

if (!input_held) || (!isActive)
{   
    if audio_is_playing(sfx_flamethrower_start) audio_stop_sound(sfx_flamethrower_start);
}




</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>5,9</point>
    <point>9,9</point>
  </PhysicsShapePoints>
</object>
