<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-999999</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Setup
owner = noone;

allowDraw = false;
allowDrawTime = room_speed*0.75;
allowDrawTimeCurrent = 0;
drawCompleted = false;

myString = "";
myStringLength = 0;

bgAlpha = 0;
textAlpha = 0;


</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Update position and string
if (instance_exists(owner))
{
    myString = owner.name;
    x = owner.bbox_right + 8;
    y = owner.y;
    myStringLength = string_length(myString);
}
else instance_destroy();



</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="5">
      <action>
        <libid>1</libid>
        <id>203</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>1</exetype>
        <functionname>action_kill_object</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Main Draw
if instance_exists(owner)
{
    if (owner.in_range)
    {
        if (!allowDraw){
            if (allowDrawTimeCurrent &lt; allowDrawTime) allowDrawTimeCurrent++;
            else allowDraw = true;
        }
        else{
            var whiteBarWidth = 16;
            var whiteBarHeight = 16;
            var whiteBarWidthPerString = 5;
            var alphaSpeed = 0.002;
        
            whiteBarWidth += (whiteBarWidthPerString * (myStringLength+2) );
    
            if (!drawCompleted){
                bgAlpha += alphaSpeed;
                textAlpha += alphaSpeed;
                if (bgAlpha) &amp;&amp; (textAlpha) drawCompleted = true;
            }
            
            draw_set_font(global.font_shopPrice);
            draw_set_valign(fa_center);
            draw_set_halign(fa_center);
            draw_rectangle_colour(x, y-(whiteBarHeight/2), x+whiteBarWidth, y+(whiteBarHeight/2), c_white, c_white, c_white, c_white, false );
            draw_set_color(c_black);
            draw_text(x+(whiteBarWidth/2),y,myString);
        }
    }  
    else {
        drawCompleted = false;
        bgAlpha = 0;
        textAlpha = 0;
        allowDraw = false;
        allowDrawTimeCurrent = 0;
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>16,41</point>
    <point>21,21</point>
  </PhysicsShapePoints>
</object>
