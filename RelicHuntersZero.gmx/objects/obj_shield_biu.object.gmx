<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_shield_biu</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Main Stuff

owner = noone;
isActive = true;

staminaMin = 5;
staminaCost = 0.15;

reflectAngleMin = -12;
reflectAngleMax = 12;

reflectRocketMin = 30;
reflectRocketMax = 30;

reflectDamageMultiplier = 2.5;

rocketList = ds_list_create();

animationTrigger = false;
animationSpeed = 0.4;
image_speed = 0;


</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="1" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Clean Up
ds_list_destroy(rocketList);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Follow Owner's Owner (The Player!)

var timeToDie = false;

if (instance_exists(owner)) 
{
    if (instance_exists(owner.owner))
    {
        x = owner.owner.x;
        y = owner.owner.y;
        
        depth = owner.owner.depth-1;
    }
    else timeToDie = true;
}
else timeToDie = true;

if (timeToDie) instance_destroy();
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Hit Effect

if (isActive)
{
    if (animationTrigger)
    {
        image_index = 0;
        image_speed = animationSpeed;
        animationTrigger = false;
        
        if (instance_exists(owner)) if (instance_exists(owner.owner))
        {
            audio_play_exclusive(owner.owner.audio_emitter,false,1,sfx_biu_shield_hit1,sfx_biu_shield_hit2,sfx_biu_shield_hit3,sfx_biu_shield_hit4,sfx_biu_shield_hit5,sfx_biu_shield_hit6,sfx_biu_shield_hit7);
        }
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Activation Control

isActive = false;

if (instance_exists(owner))
{
    if (owner.isActive) &amp;&amp; (instance_exists(owner.owner))
    {        
        if (owner.owner.inputShield)
        {
            if (owner.owner.stamina &gt;= staminaMin)
            {
                isActive = true;
                owner.owner.stamina -= staminaCost;
            }
        }
        if (owner.owner.throw) isActive = true;
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_projectile_enemy">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Reflect

if (isActive)
{
    var newpeed = other.speed;
    var newDirection = other.direction + 180 + random_range(reflectAngleMin,reflectAngleMax);
    var newDecay = other.decay;
    var newRange = other.range;
    var newPush = other.push_power;
    var newAmmoType = other.ammo_type;
    var newFaction = f_player;
    var newType = other.type;
    var newDamage = round(other.damage * reflectDamageMultiplier);
    
    newProjectile = instance_create(other.x,other.y,obj_projectile_player);
    
    newProjectile.speed = newpeed;
    newProjectile.direction = newDirection;
    newProjectile.decay = newDecay;
    newProjectile.range = newRange;
    newProjectile.push_power = newPush;
    newProjectile.ammo_type = newAmmoType;
    newProjectile.faction = newFaction;
    newProjectile.type = newType;
    newProjectile.damage = newDamage;
    
    with (other) instance_destroy();
    
    animationTrigger = true;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_projectile_player">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Reflect

if (isActive) &amp;&amp; (instance_exists(other))
{
    if (instance_exists(other.owner)) &amp;&amp; (instance_exists(owner))
    {
        if (instance_exists(owner.owner))
        {
            if (other.owner.myPlayerId != owner.owner.myPlayerId)
            {   
                var newpeed = other.speed;
                var newDirection = other.direction + 180 + random_range(reflectAngleMin,reflectAngleMax);
                var newDecay = other.decay;
                var newRange = other.range;
                var newPush = other.push_power;
                var newAmmoType = other.ammo_type;
                var newFaction = f_player;
                var newType = other.type;
                var newDamage = round(other.damage * reflectDamageMultiplier);
                
                newProjectile = instance_create(other.x,other.y,obj_projectile_player);
                
                newProjectile.owner = owner.owner;
                newProjectile.speed = newpeed;
                newProjectile.direction = newDirection;
                newProjectile.decay = newDecay;
                newProjectile.range = newRange;
                newProjectile.push_power = newPush;
                newProjectile.ammo_type = newAmmoType;
                newProjectile.faction = newFaction;
                newProjectile.type = newType;
                newProjectile.damage = newDamage;
                newProjectile.distance_travelled = 0;
                
                with (other) instance_destroy();
                
                animationTrigger = true;
            }
        }
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_rocket">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Reflect

if (isActive) &amp;&amp; (!ds_list_find_index(rocketList,other.id))
{
    ds_list_add(rocketList,other.id);

    other.direction += 180 + random_range(reflectRocketMin,reflectRocketMax);
    other.faction = f_player;
    
    animationTrigger = true;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="7">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Reset Animation
image_index = 0;
image_speed = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Draw

if (isActive) draw_self();
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
