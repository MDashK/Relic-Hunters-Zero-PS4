<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_char_playerStat</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Stats Init

owner = noone;

statHealth = 5;
statShield = 5;
statMelee = 5;
statStamina = 5;
statSpeed = 5;

myWeaponSprite = spr_pistol_jimmy;

myString = loc_key("CHARSELECT_DESC_JIMMY");

sqColor[5] = make_colour_rgb(19,219,219);
sqColor[4] = make_colour_rgb(151,216,0);
sqColor[3] = make_colour_rgb(255,217,64);
sqColor[2] = make_colour_rgb(239,148,4);
sqColor[1] = make_colour_rgb(238,4,68);




</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Set Stats Correctly

if (owner) &amp;&amp; (instance_exists(owner))
{
    if (owner.slotCharacter != -1)
    {
        if owner.slotCharacter == char_jimmy
        {
            statHealth = 3;
            statShield = 3;
            statMelee = 3;
            statStamina = 3;
            statSpeed = 3;
            myWeaponSprite = spr_pistol_jimmy;
            myString = loc_key("CHARSELECT_DESC_JIMMY");
        }
        
        if owner.slotCharacter == char_pinky
        {
            statHealth = 4;
            statShield = 3;
            statMelee = 5;
            statStamina = 4;
            statSpeed = 4;
            myWeaponSprite = spr_gloves_idle;
            myString = loc_key("CHARSELECT_DESC_PINKYY");
        }
        
        if owner.slotCharacter == char_raff
        {
            statHealth = 2;
            statShield = 3;
            statMelee = 3;
            statStamina = 3;
            statSpeed = 3;
            myWeaponSprite = spr_keytar;
            myString = loc_key("CHARSELECT_DESC_RAFF");
        }
        
        if owner.slotCharacter == char_biu
        {
            statHealth = 5;
            statShield = 1;
            statMelee = 4;
            statStamina = 3;
            statSpeed = 1;
            myWeaponSprite = spr_buckler_idle;
            myString = loc_key("CHARSELECT_DESC_BIU");
        }
        
        if owner.slotCharacter == char_punny
        {
            statHealth = 1;
            statShield = 4;
            statMelee = 1;
            statStamina = 3;
            statSpeed = 4;
            myWeaponSprite = spr_flamethrower;
            myString = loc_key("CHARSELECT_DESC_PUNNY");
        }
        
        if owner.slotCharacter == char_ass
        {
            statHealth = 1;
            statShield = 1;
            statMelee = 2;
            statStamina = 2;
            statSpeed = 3;
            myWeaponSprite = spr_pistol;
            myString = loc_key("CHARSELECT_DESC_ASS");
        }
        
        if owner.slotCharacter == char_rider
        {
            statHealth = 4;
            statShield = 1;
            statMelee = 5;
            statStamina = 3;
            statSpeed = 5;
            myWeaponSprite = spr_kamired_idle;
            myString = loc_key("CHARSELECT_DESC_RIDER");
        }
        
        if owner.slotCharacter == char_random
        {
            statHealth = 5;
            statShield = 5;
            statMelee = 5;
            statStamina = 5;
            statSpeed = 5;
            myWeaponSprite = noone;
            myString = '';
        }
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Draw Event

if (owner) &amp;&amp; (instance_exists(owner))
{
    if (owner.slotCharacter != -1)
    {
        draw_self();
        
        //Player Stat Names
        var textX = x+8;
        var textY = y+12;
        var statsX = textX + 160;
        var statsY = textY;
        var lineSpacing = 24;
        
        draw_set_font(global.font_menuSmall);
        draw_set_valign(fa_center);
        draw_set_halign(fa_left);
        draw_set_color(c_white);
        
        draw_text(textX,textY,loc_key("CHARSELECT_HEALTH")); textY+=lineSpacing;
        draw_text(textX,textY,loc_key("CHARSELECT_SHIELD")); textY+=lineSpacing;
        draw_text(textX,textY,loc_key("CHARSELECT_MELEE")); textY+=lineSpacing;
        draw_text(textX,textY,loc_key("CHARSELECT_STAMINA")); textY+=lineSpacing;
        draw_text(textX,textY,loc_key("CHARSELECT_SPEED")); textY+=lineSpacing;
        
        //Player Stat Squares
        var squareSize = 12;
        var squareSpacing = 4;
        var statsXCurrent = statsX;
        
        for (var i=1; i&lt;=statHealth; i++)
        {
            draw_set_colour(sqColor[i]);
            draw_rectangle(statsXCurrent,statsY-(squareSize/2),statsXCurrent+squareSize,statsY+(squareSize/2),false);
            statsXCurrent += (squareSize + squareSpacing);
        }
        statsXCurrent = statsX;
        statsY += lineSpacing;
        
        for (var i=1; i&lt;=statShield; i++)
        {
            draw_set_colour(sqColor[i]);
            draw_rectangle(statsXCurrent,statsY-(squareSize/2),statsXCurrent+squareSize,statsY+(squareSize/2),false);
            statsXCurrent += (squareSize + squareSpacing);
        }
        statsXCurrent = statsX;
        statsY += lineSpacing;
        
        for (var i=1; i&lt;=statMelee; i++)
        {
            draw_set_colour(sqColor[i]);
            draw_rectangle(statsXCurrent,statsY-(squareSize/2),statsXCurrent+squareSize,statsY+(squareSize/2),false);
            statsXCurrent += (squareSize + squareSpacing);
        }
        statsXCurrent = statsX;
        statsY += lineSpacing;
        
        for (var i=1; i&lt;=statStamina; i++)
        {
            draw_set_colour(sqColor[i]);
            draw_rectangle(statsXCurrent,statsY-(squareSize/2),statsXCurrent+squareSize,statsY+(squareSize/2),false);
            statsXCurrent += (squareSize + squareSpacing);
        }
        statsXCurrent = statsX;
        statsY += lineSpacing;
        
        for (var i=1; i&lt;=statSpeed; i++)
        {
            draw_set_colour(sqColor[i]);
            draw_rectangle(statsXCurrent,statsY-(squareSize/2),statsXCurrent+squareSize,statsY+(squareSize/2),false);
            statsXCurrent += (squareSize + squareSpacing);
        }
        statsXCurrent = statsX;
        statsY += lineSpacing;
        
        // Player Description
        draw_set_color(c_white);
        draw_set_valign(fa_top);
        draw_set_font(global.font_tinyText);
        draw_text_ext(x+8,y+122,myString,20,230);
        
        // Player Weapon
        if sprite_exists(myWeaponSprite) draw_sprite(myWeaponSprite,1,x+190,y+212);
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
