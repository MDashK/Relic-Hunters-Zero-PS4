<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_cage1</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>class_tactical_target</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>cage_chance = irandom_range(0,3);
if (cage_chance != 0)
{
    instance_create(x,y+95,obj_longbox);
    instance_destroy();
}

depth = -y -10;

image_speed = 0.2;

shake = 0;
shake_direction = 0;
shake_recovery = 0.2;
shake_max = 12;

maxhp = 250;
hp = maxhp;
damage = 0;

drawX = x;
drawY = y;

hit_taken = false;
hit_taken_time = 0;

shadow_object_setup(0,-1,-1,global.default_shadow_yscale);

//Audio
audio_emitter = audio_emitter_create();
audio_emitter_falloff(audio_emitter, global.falloffMinorDist, global.falloffMinorMax, global.falloffMinorFactor );
audio_emitter_position(audio_emitter, x, y, 0);
audio_emitter_gain(audio_emitter,global.soundVolume);

impactSound1 = sfx_debris1;
impactSound2 = sfx_debris2;
impactSound3 = sfx_debris3;

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//Shake
if (shake)
    {
        if shake &gt; shake_max shake = shake_max;
         
        drawX = x+lengthdir_x(shake,shake_direction);
        drawY = y+lengthdir_y(shake,shake_direction);
        
        shake -= shake_recovery;
        shake_direction = irandom(359);
        
        if shake &lt; 0 shake = 0;
    }

    
//Hit Taken
if (hit_taken)
{
    if (damage == 0) sprite_index = spr_cage1_hit;
    if (damage == 1) sprite_index = spr_cage1_hit;
    if (damage == 2) sprite_index = spr_cage1_hit;
    
    if (!hit_taken_time) audio_play_exclusive(audio_emitter,false,1,impactSound1,impactSound2,impactSound3);
    hit_taken_time++;
    if hit_taken_time &gt;= 5
    {
        hit_taken_time = 0;
        hit_taken = false;
    }
}
else
{
    if (damage == 0) sprite_index = spr_cage1;
    if (damage == 1) sprite_index = spr_cage2;
    if (damage == 2) sprite_index = spr_cage3;
}

//Damage
if (hp &gt; maxhp*0.66) damage = 0;

if (hp &lt;= maxhp*0.66) &amp;&amp; (hp &gt; maxhp*0.33)
{
    if damage == 0
    {
        myDirt = instance_create(x,y,fx_dirt);
        myDirt.sprite_index = spr_longbox_dirt;
    }
    damage = 1;
}

if (hp &lt;= maxhp*0.33)
{
    if damage == 1
    {
        myDirt = instance_create(x,y,fx_dirt);
        myDirt.sprite_index = spr_longbox_dirt;
    }
    damage = 2;
}

if (hp &gt; maxhp) hp = maxhp;

if hp &lt; 0
{
    var spawnObj = obj_kamikaze1;
    var spawnAmount = 6;
    if (global.gameMode == gamemode_endless) &amp;&amp; (global.currentLoop &gt;= 2) { spawnObj = obj_kamitank; spawnAmount = 2};
    if (global.character[1] == char_rider) || (global.character[2] == char_rider) spawnObj = obj_kamiAlly;
    
    repeat(spawnAmount)
    {
        spawnX = x + irandom_range(-10,10) + 64;
        spawnY = y + irandom_range(-10,10) + 64;
        instance_create(spawnX,spawnY,spawnObj);
    }    
    
    instance_create(x,y,fx_kami_cageDestroy);
    
    //Stats and Achievements
    steam_set_stat_int("STAT_TOTAL_KAMICAGES", steam_get_stat_int("STAT_TOTAL_KAMICAGES") + 1  ); 
    if (steam_get_stat_int("STAT_TOTAL_KAMICAGES") &gt;= 20) 
    {
        achievement_give("ACHIEVEMENT_DESTROY_KAMIKAGES");
        achievement_give("ACHIEVEMENT_UNLOCK_RIDER");
        global.unlockRider = 1;
    }
    instance_destroy();
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_sprite(sprite_index,image_index,drawX,drawY);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>0,0</point>
    <point>128,128</point>
  </PhysicsShapePoints>
</object>
