<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>class_interactive_master</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Setup
event_inherited();
spawnRelic = noone;
spawnWeapon = noone;
spawnCoins = 0;
spawnSprite = noone;
spawnChallenge = '';

audio_play_sound(sfx_relic_on,99,false);
unlock = false;

fxObject = fx_chestRegular;

canActivate = false;
activateTime = room_speed*0.6;
activateTimeCurrent = 0;

image_speed = 0.2;
image_xscale = 2
image_yscale = 2;

depth = -y-16;

range = 130;
in_range = false;

myPrompt = instance_create(x+10,y-25,fx_prompt_e);
myPrompt.owner = id;

name = loc_key("INFO_TREASURECHEST");
myWeaponInfo = instance_create(x,y,fx_info_pickup);
myWeaponInfo.owner = id;

reflection_object_setup(25,-1,image_index);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Unlock

event_inherited();

if (unlock){
    open = instance_create(x,y,fxObject);
    open.spawnRelic = spawnRelic;
    open.spawnWeapon = spawnWeapon;
    open.spawnSprite = spawnSprite;
    open.spawnCoins = spawnCoins;
    open.spawnChallenge = spawnChallenge;
    open.activationClient = activationClient;
    instance_destroy();
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Open

event_inherited();

if (!canActivate) {
    if (activateTimeCurrent &lt; activateTime) activateTimeCurrent++;
    else canActivate = true;
}

if instance_exists(activationClient) &amp;&amp; (canActivate)
{
    if (point_distance(x,y,activationClient.x,activationClient.y) &lt;= range) in_range = true;

    if (wantToActivate) &amp;&amp; (in_range)
    {
        unlock = true;
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
