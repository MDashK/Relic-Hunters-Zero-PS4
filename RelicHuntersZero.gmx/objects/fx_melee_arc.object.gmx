<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_melee</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>spr_melee_mask</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>owner = noone;
damage = 0;
push_power = 0;
push_direction = 0;
image_speed = 0.1;
if instance_exists(owner)
{
    //push_direction = owner.look_direction;
    //Estou setando isso na hora da porrada agora, foda-se
}
damage_list = ds_list_create();
damage_list_solid = ds_list_create();
max_hits = 1;

hasJoy = false;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if instance_exists(owner)
{
    x = owner.x;
    y = owner.y;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Owner joystick check (for vibration)

if (global.input[owner.myPlayerId] != K_INPUT_KEYBOARD)
{
    hasJoy = true;
    joy = global.input[owner.myPlayerId];
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Damage and Death
if instance_exists(owner)
{
    depth = owner.depth+2;
    image_xscale = owner.image_xscale;
    if (!owner.melee) &amp;&amp; (!owner.dodging) instance_destroy();
    
    //Player back damage
    fucker = collision_ellipse(owner.bbox_left,owner.bbox_top,owner.bbox_right,owner.bbox_bottom,class_enemy,false,true);
    
    if instance_exists(fucker)
    {
        
        if (ds_list_find_index(damage_list,fucker.id) &lt; 0) &amp;&amp; (ds_list_size(damage_list) &lt; max_hits) &amp;&amp; (fucker.isVulnerable)
        {
            ds_list_add(damage_list,fucker.id);
            
            fucker.aggro += fucker.aggro_add_hit;
            
            if (global.relic_midnight_beer == 2) damage += round(damage*global.midnightDamageMultiplier ); //Midnight Beer
            if (global.relic_midnight_meal == 2) damage += round(damage*global.midnightDamageMultiplier ); //Midnight Meal
            
            if (fucker.shield) 
            {
                fucker.energy -= damage;
                if (fucker.energy &lt;= 0) audio_play(fucker.audio_emitter,false,1,sfx_shield_destroy);
                else audio_play_exclusive(fucker.audio_emitter,false,1,sfx_shield_hit1,sfx_shield_hit2);
            }
            else fucker.hp -= damage;
    
            fucker.hit_taken = true;
            if (hasJoy) joy_rumble(joy,7,7);
            
            fucker.pushed = true;
            fucker.push_direction = point_direction(owner.x,owner.y,fucker.x,fucker.y);
            fucker.push_speed += push_power;
            
            spreadX = irandom_range(-15,15);
            spreadY = irandom_range(-15,15);
            damage_fx = instance_create(fucker.x+spreadX,fucker.y+spreadY,fx_damage);
            damage_fx.damage = damage;
            damage_fx.critical = true;
        }
    }
    else
    {
        fucker = collision_ellipse(owner.bbox_left,owner.bbox_top,owner.bbox_right,owner.bbox_bottom,obj_wall,false,true);
        if instance_exists(fucker)
        {
            if (ds_list_find_index(damage_list_solid,fucker.id) &lt; 0)
            {
                ds_list_add(damage_list_solid,fucker.id);
                
                push_direction = point_direction(owner.x,owner.y,fucker.x,fucker.y);
                
                fucker.hp -= damage;
                if (hasJoy) joy_rumble(joy,7,7);
                fucker.shake_direction = push_direction;
                fucker.hitDirection = push_direction;
                fucker.push_direction = push_direction;
                fucker.shake += 5;
                fucker.hit_taken = true;
            }
        }
    }
}
else instance_destroy();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_wall">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if instance_exists(other)
{
    if (ds_list_find_index(damage_list_solid,other.id) &lt; 0)
    {
        ds_list_add(damage_list_solid,other.id);
        
        if (global.relic_midnight_beer == 2) damage += round(damage*global.midnightDamageMultiplier ); //Midnight Beer
        if (global.relic_midnight_meal == 2) damage += round(damage*global.midnightDamageMultiplier ); //Midnight Meal
        
        if (instance_exists(owner)) push_direction = point_direction(owner.x,owner.y,other.x,other.y);
        
        other.hp -= damage;
        other.shake_direction = push_direction;
        other.hitDirection = push_direction;
        other.explosionDirection = push_direction;
        other.shake += 5;
        if (hasJoy) joy_rumble(joy,7,7);
        other.hit_taken = true;
        
        if (sprite_index == spr_melee_gloves)
        {
            audio_play(other.audio_emitter,false,1,sfx_gloves_hit1,sfx_gloves_hit2);
        }
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="class_enemy">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Damage
if instance_exists(other) &amp;&amp; instance_exists(owner)
{
    spreadX = irandom_range(-15,15);
    spreadY = irandom_range(-15,15);
        
    if (ds_list_find_index(damage_list,other.id) &lt; 0) &amp;&amp; (ds_list_size(damage_list) &lt; max_hits) &amp;&amp; (other.isVulnerable) &amp;&amp; (!other.dodging)
    {
        var originalDamage = damage;
        
        ds_list_add(damage_list,other.id);
        
        other.aggro += other.aggro_add_hit;
        if (global.relic_midnight_beer == 2) damage += round(damage*global.midnightDamageMultiplier ); //Midnight Beer
        if (global.relic_midnight_meal == 2) damage += round(damage*global.midnightDamageMultiplier ); //Midnight Meal
        
        if (other.shield) 
        {
            if (global.challengeSupressor) damage = damage*2;
            var excessDamage = (damage - other.energy);
            other.energy -= damage;
            if (other.energy &lt;= 0) {
                audio_play(other.audio_emitter,false,1,sfx_shield_destroy);
                if (excessDamage) other.hp -= excessDamage;
            }
            else audio_play_exclusive(other.audio_emitter,false,1,sfx_shield_hit1,sfx_shield_hit2);
            
        }
        else 
        {
            other.hp -= damage;
            repeat(round(damage/10)) blood = instance_create(x,y,fx_blood);
        }
        other.hit_taken = true;
        if (hasJoy) joy_rumble(joy,7,7);
        
        other.pushed = true;
        other.push_direction = point_direction(owner.x,owner.y,other.x,other.y);
        other.push_speed += push_power;
        
        damageEffect = instance_create(other.x+spreadX,other.y+spreadY,fx_damage);
        damageEffect.damage = damage;
        damageEffect.critical = true;
        
        if (sprite_index == spr_melee_gloves)
        {
            audio_play(other.audio_emitter,false,1,sfx_gloves_hit1,sfx_gloves_hit2,sfx_gloves_hit3);
        }
        else audio_play(other.audio_emitter,false,1,sfx_impact_flesh1,sfx_impact_flesh2,sfx_impact_flesh3,sfx_impact_flesh4);
        
        damage = originalDamage;
    }
    
    if (other.dodging) &amp;&amp; (ds_list_find_index(damage_list,other.id) &lt; 0)
    {
        damageEffect = instance_create(other.x+spreadX,other.y+spreadY,fx_damage);
        ds_list_add(damage_list,other.id);
    }
}



</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="class_player">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Friendly Fire
if (global.friendlyFire)
{
    if instance_exists(other)
    {
        if (other.id != owner.id)
        {
            spreadX = irandom_range(-15,15);
            spreadY = irandom_range(-15,15);
                    
            if (!other.dodging) &amp;&amp; (other.isVulnerable)
            {
                ffDamage = round(damage * global.friendlyFireDamageRatio);
                
                if (ds_list_find_index(damage_list,other.id) &lt; 0) &amp;&amp; (ds_list_size(damage_list) &lt; max_hits)
                {
                    ds_list_add(damage_list,other.id);
                    
                    if (global.relic_midnight_beer == 2) ffDamage += round(damage*global.midnightDamageMultiplier ); //Midnight Beer
                    if (global.relic_midnight_meal == 2) ffDamage += round(damage*global.midnightDamageMultiplier ); //Midnight Beer
                    
                    if (other.shield) 
                    {
                        other.energy -= ffDamage;
                        audio_play_exclusive(other.audio_emitter,false,1,sfx_shield_hit1,sfx_shield_hit2);
                        if (other.energy &lt;= 0) audio_play(other.audio_emitter,false,1,sfx_shield_destroy);
                    }
                    else 
                    {
                        other.hp -= ffDamage;
                        repeat(round(ffDamage/10)) blood = instance_create(x,y,fx_blood);
                        
                        if (other.hp &lt;= 0) achievement_give("ACHIEVEMENT_TEAMKILL");
                    }
                    other.hit_taken = true;
                    if (hasJoy) joy_rumble(joy,7,7);
                    
                    damageEffect = instance_create(other.x+spreadX,other.y+spreadY,fx_damage);
                    damageEffect.damage = ffDamage;
                    damageEffect.critical = true;
                    
                    if (sprite_index == spr_melee_gloves)
                    {
                        audio_play(other.audio_emitter,false,1,sfx_gloves_hit1,sfx_gloves_hit2,sfx_gloves_hit3);
                    }
                    else audio_play(other.audio_emitter,false,1,sfx_impact_flesh1,sfx_impact_flesh2,sfx_impact_flesh3,sfx_impact_flesh4);
                }
            }
            
            if (other.dodging) &amp;&amp; (ds_list_find_index(damage_list,other.id) &lt; 0)
            {
                damageEffect = instance_create(other.x+spreadX,other.y+spreadY,fx_damage);
                ds_list_add(damage_list,other.id);
            }
        }
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="7">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>image_speed = 0;
image_index = image_number-1;
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>-15,67</point>
    <point>42,42</point>
  </PhysicsShapePoints>
</object>
